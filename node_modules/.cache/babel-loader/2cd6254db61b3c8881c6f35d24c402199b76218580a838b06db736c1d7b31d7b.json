{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      city: 'Moscow',\n      // Город по умолчанию\n      weather: {} // Данные о погоде\n    };\n  },\n  methods: {\n    // Метод для получения данных о погоде\n    async fetchWeather() {\n      const apiKey = process.env.VUE_APP_API_KEY;\n      const url = `${process.env.VUE_APP_BASE_URL}weather?q=${this.city}&units=metric&appid=${apiKey}`;\n      try {\n        const response = await axios.get(url);\n        this.weather = {\n          temp: response.data.main.temp,\n          // Температура\n          description: response.data.weather[0].description // Описание погоды\n        };\n      } catch (error) {\n        console.error('Ошибка получения данных:', error);\n      }\n    }\n  },\n  // При загрузке компонента вызываем метод fetchWeather\n  mounted() {\n    this.fetchWeather();\n  }\n};","map":{"version":3,"names":["axios","data","city","weather","methods","fetchWeather","apiKey","process","env","VUE_APP_API_KEY","url","VUE_APP_BASE_URL","response","get","temp","main","description","error","console","mounted"],"sources":["C:\\Users\\Workstation\\weather-app\\src\\components\\WeatherDisplay.vue"],"sourcesContent":["<template>\r\n  <div class=\"weather\">\r\n    <h2>Погода в {{ city }}</h2>\r\n    <p>Температура: {{ weather.temp }}°C</p>\r\n    <p>Описание: {{ weather.description }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      city: 'Moscow', // Город по умолчанию\r\n      weather: {}     // Данные о погоде\r\n    };\r\n  },\r\n  methods: {\r\n    // Метод для получения данных о погоде\r\n    async fetchWeather() {\r\n      const apiKey = process.env.VUE_APP_API_KEY;\r\n      const url = `${process.env.VUE_APP_BASE_URL}weather?q=${this.city}&units=metric&appid=${apiKey}`;\r\n      try {\r\n        const response = await axios.get(url);\r\n        this.weather = {\r\n          temp: response.data.main.temp,                // Температура\r\n          description: response.data.weather[0].description // Описание погоды\r\n        };\r\n      } catch (error) {\r\n        console.error('Ошибка получения данных:', error);\r\n      }\r\n    }\r\n  },\r\n  // При загрузке компонента вызываем метод fetchWeather\r\n  mounted() {\r\n    this.fetchWeather();\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.weather {\r\n  font-family: Arial, sans-serif;\r\n  text-align: center;\r\n  margin-top: 20px;\r\n}\r\n\r\nh2 {\r\n  color: #444;\r\n}\r\n</style>"],"mappings":"AASA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,QAAQ;MAAE;MAChBC,OAAO,EAAE,CAAC,EAAM;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,YAAYA,CAAA,EAAG;MACnB,MAAMC,MAAK,GAAIC,OAAO,CAACC,GAAG,CAACC,eAAe;MAC1C,MAAMC,GAAE,GAAI,GAAGH,OAAO,CAACC,GAAG,CAACG,gBAAgB,aAAa,IAAI,CAACT,IAAI,uBAAuBI,MAAM,EAAE;MAChG,IAAI;QACF,MAAMM,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAACH,GAAG,CAAC;QACrC,IAAI,CAACP,OAAM,GAAI;UACbW,IAAI,EAAEF,QAAQ,CAACX,IAAI,CAACc,IAAI,CAACD,IAAI;UAAiB;UAC9CE,WAAW,EAAEJ,QAAQ,CAACX,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACa,WAAU,CAAE;QACpD,CAAC;MACH,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;EACF,CAAC;EACD;EACAE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACd,YAAY,CAAC,CAAC;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}