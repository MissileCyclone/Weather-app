{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"weather\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, \"Погода в \" + _toDisplayString($data.city), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Температура: \" + _toDisplayString($data.weather.temp) + \"°C\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Описание: \" + _toDisplayString($data.weather.description), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","city","weather","temp","description"],"sources":["C:\\Users\\Workstation\\weather-app\\src\\components\\WeatherDisplay.vue"],"sourcesContent":["<template>\r\n  <div class=\"weather\">\r\n    <h2>Погода в {{ city }}</h2>\r\n    <p>Температура: {{ weather.temp }}°C</p>\r\n    <p>Описание: {{ weather.description }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      city: 'Moscow', // Город по умолчанию\r\n      weather: {}     // Данные о погоде\r\n    };\r\n  },\r\n  methods: {\r\n    // Метод для получения данных о погоде\r\n    async fetchWeather() {\r\n      const apiKey = process.env.VUE_APP_API_KEY;\r\n      const url = `${process.env.VUE_APP_BASE_URL}weather?q=${this.city}&units=metric&appid=${apiKey}`;\r\n      try {\r\n        const response = await axios.get(url);\r\n        this.weather = {\r\n          temp: response.data.main.temp,                // Температура\r\n          description: response.data.weather[0].description // Описание погоды\r\n        };\r\n      } catch (error) {\r\n        console.error('Ошибка получения данных:', error);\r\n      }\r\n    }\r\n  },\r\n  // При загрузке компонента вызываем метод fetchWeather\r\n  mounted() {\r\n    this.fetchWeather();\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.weather {\r\n  font-family: Arial, sans-serif;\r\n  text-align: center;\r\n  margin-top: 20px;\r\n}\r\n\r\nh2 {\r\n  color: #444;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;uBAApBC,mBAAA,CAIM,OAJNC,UAIM,GAHJC,mBAAA,CAA4B,YAAxB,WAAS,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,IAAI,kBACpBH,mBAAA,CAAwC,WAArC,eAAa,GAAAC,gBAAA,CAAGC,KAAA,CAAAE,OAAO,CAACC,IAAI,IAAG,IAAE,iBACpCL,mBAAA,CAA0C,WAAvC,YAAU,GAAAC,gBAAA,CAAGC,KAAA,CAAAE,OAAO,CAACE,WAAW,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}